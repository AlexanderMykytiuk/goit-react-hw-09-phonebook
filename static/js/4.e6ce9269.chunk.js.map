{"version":3,"sources":["views/common.module.scss","Components/ContactList/ContactList.module.scss","Components/ListItem/ListItem.module.css","Components/Button/Button.module.css","Components/ContactForm/ContactForm.module.scss","Components/Filter/Filter.module.scss","Components/Button/Button.jsx","Components/ListItem/ListItem.jsx","redux/Contacts/contacts-operation.js","redux/Contacts/contacts-selectors.js","Components/ContactList/ContactList.jsx","Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.jsx","views/ContactsPage.js"],"names":["module","exports","Button","onClick","text","type","className","styles","button","defaultProps","ListItem","contacts","onDeleteContact","map","id","name","number","listItem","fetchContactRequest","actions","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","dispatch","a","contact","axios","post","response","data","message","contactID","delete","get","getIsLoading","state","loading","getContacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedContact","toLowerCase","includes","ContactList","useSelector","useDispatch","container","list","contactsOperation","ContactForm","useState","setName","setNumber","addContact","useCallback","handleInputChange","event","currentTarget","value","reset","onSubmit","preventDefault","test","toast","find","findContact","form","label","input","onChange","Filter","onHandleInputSearch","e","contactsActions","filterContact","title","findContactLabel","findContactInput","placeholder","ContactsPage","isLoading","useEffect","contactContainer","Spinner"],"mappings":"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","file":"static/js/4.e6ce9269.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginRegistrationPage\":\"common_LoginRegistrationPage__3IdqE\",\"textField\":\"common_textField__HfeXi\",\"margin\":\"common_margin__Qq-_b\",\"button\":\"common_button__3P3zi\",\"mainTitle\":\"common_mainTitle__1Jf-Q\",\"image\":\"common_image__1zzJh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__36r1S\",\"list\":\"ContactList_list__3MhKI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ListItem_listItem__1jk75\",\"name\":\"ListItem_name__O3zs3\",\"number\":\"ListItem_number__34UrC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__7eJjV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__3wS3J\",\"form\":\"ContactForm_form__m2fNI\",\"input\":\"ContactForm_input__32cMU\",\"label\":\"ContactForm_label__3xD7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findContact\":\"Filter_findContact__QzJrh\",\"findContactLabel\":\"Filter_findContactLabel__3LWAn\",\"findContactInput\":\"Filter_findContactInput__atKWZ\",\"title\":\"Filter_title__1mSb6\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nconst Button = ({ onClick, text, type = 'button' }) => (\n  <button type={type} className={styles.button} onClick={onClick}>\n    {text}\n  </button>\n);\n\nButton.defaultProps = {\n  onClick: () => null,\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ListItem.module.css';\nimport Button from '../Button';\n\nconst ListItem = ({ contacts, onDeleteContact }) => {\n  return contacts.map(({ id, name, number }) => (\n    <li className={styles.listItem} key={id}>\n      <p className={styles.name}>{name} </p>\n      <p className={styles.number}>{number} </p>\n      <Button text=\"Delete\" onClick={() => onDeleteContact(id)} />\n    </li>\n  ));\n};\nListItem.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\nexport default ListItem;\n","import axios from 'axios';\nimport actions from './contacts-actions';\nconst {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} = actions;\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n  try {\n    const response = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(response.data));\n  } catch (error) {\n    dispatch(fetchContactError(error.message));\n  }\n};\nconst addContact = (name, number) => async dispatch => {\n  const contact = { name, number };\n  dispatch(addContactRequest());\n  try {\n    const response = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(response.data));\n  } catch (error) {\n    dispatch(addContactError(error.message));\n  }\n};\n\nconst deleteContact = contactID => async dispatch => {\n  dispatch({\n    type: deleteContactRequest(),\n  });\n  try {\n    await axios.delete(`./contacts/${contactID}`);\n    dispatch(deleteContactSuccess(contactID));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n  }\n};\n\nexport default { addContact, deleteContact, fetchContacts };\n","// создает мемоизированный селектор\nimport { createSelector } from '@reduxjs/toolkit';\nexport const getIsLoading = state => state.contacts.loading;\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedContact = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedContact),\n    );\n  },\n);\n","import React from 'react';\nimport styles from './ContactList.module.scss';\nimport ListItem from '../ListItem';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperation } from '../../redux/Contacts';\n\nimport { getVisibleContacts } from '../../redux/Contacts/contacts-selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(contactsOperation.deleteContact(id));\n\n  return (\n    <div className={styles.container}>\n      <ul className={styles.list}>\n        <ListItem contacts={contacts} onDeleteContact={onDeleteContact} />\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;","import React, { useState, useCallback } from 'react';\nimport styles from './ContactForm.module.scss';\nimport Button from '../Button';\nimport { toast } from 'react-toastify';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperation } from '../../redux/Contacts';\nimport { getContacts } from '../../redux/Contacts/contacts-selectors';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const addContact = useCallback(\n    (name, number) => dispatch(contactsOperation.addContact(name, number)),\n    [dispatch],\n  );\n\n  const handleInputChange = event => {\n    const valueInput = event.currentTarget.name;\n\n    switch (valueInput) {\n      case 'name':\n        setName(event.currentTarget.value);\n        break;\n\n      case 'number':\n        setNumber(event.currentTarget.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let expression = /^\\d+/;\n    if (!name || !number || expression.test(number) === false) {\n      return toast('Please fill all fields in the correct format');\n    }\n\n    const findName = contacts.find(findContact => {\n      return findContact.name === name;\n    });\n\n    if (findName) {\n      toast(`${name} is already in the contacts`);\n      reset();\n    } else {\n      addContact(name, number);\n      reset();\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={styles.container}>\n      <h2>Add new contacts</h2>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            name=\"number\"\n            type=\"tel\"\n            value={number}\n            onChange={handleInputChange}\n          />\n        </label>\n        <Button text=\"Add contact\" type=\"submit\" />\n      </form>\n    </div>\n  );\n}\n\nexport default ContactForm;","import React, { useCallback } from 'react';\nimport styles from './Filter.module.scss';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsActions } from '../../redux/Contacts';\nimport { getFilter } from '../../redux/Contacts/contacts-selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const onHandleInputSearch = useCallback(\n    e => dispatch(contactsActions.filterContact(e.currentTarget.value)),\n    [dispatch],\n  );\n\n  return (\n    <div className={styles.findContact}>\n      <h2 className={styles.title}>Find your contacts by name</h2>\n      <label className={styles.findContactLabel}>\n        <input\n          className={styles.findContactInput}\n          name=\"filter\"\n          type=\"text\"\n          value={filter}\n          onChange={onHandleInputSearch}\n          placeholder=\"Enter the name\"\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;","import React, { useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ContactList from '../Components/ContactList';\nimport ContactForm from '../Components/ContactForm';\nimport Filter from '../Components/Filter';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsOperation from '../redux/Contacts/contacts-operation';\nimport { getIsLoading } from '../redux/Contacts/contacts-selectors';\nimport Spinner from '../Components/Spinner';\nimport styles from './common.module.scss';\n\nfunction ContactsPage() {\n  const isLoading = useSelector(getIsLoading);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(contactsOperation.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.contactContainer}>\n      <ContactForm />\n      <Filter />\n      {isLoading && <Spinner />}\n      <ContactList />\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default ContactsPage;\n"],"sourceRoot":""}